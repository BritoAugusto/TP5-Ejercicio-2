/*2- Crea una clase llamada Persona que siga las siguientes condiciones:
Sus propiedades son: nombre, edad, DNI, sexo (H hombre, M mujer), peso y altura, a√±o de nacimiento. Si quieres a√±adir alguna propiedad extra puedes hacerlo.
Los m√©todos que se debe poder utilizar  son:
mostrarGeneracion: este m√©todo debe mostrar un mensaje indicando a qu√© generaci√≥n pertenece la persona creada y cual es el rasgo caracter√≠stico de esta generaci√≥n. 
esMayorDeEdad: indica si es mayor de edad, devuelve un mensaje indicando que la persona es mayor de edad.
mostrarDatos: devuelve toda la informaci√≥n del objeto.
Luego crea la interfaz necesaria para que el usuario pueda crear un objeto persona, permitiendo ingresar las propiedades mediante un formulario, tambi√©n agregar los botones ‚Äúmostrar generaci√≥n‚Äù, es ‚Äúmayor de edad‚Äù e indicar en un alert el resultado de la funci√≥n correspondiente.

*/

class Persona {
  constructor(nombre, edad, dni, sexo, peso, altura, a√±oNacimiento) {
    this.nombre = nombre;
    this.edad = edad;
    this.dni = dni;
    this.sexo = sexo;
    this.peso = peso;
    this.altura = altura;
    this.a√±oNacimiento = a√±oNacimiento;
  }
  mostrarGeneracion() {
    if (this.a√±oNacimiento >= 1994 && this.a√±oNacimiento <= 2010) {
      alert(`Pertenece a la Generacion Z. Un rasgo caracter√≠stico de √©sta generaci√≥n es la 'Irreverencia üòã`);
    } else if (this.a√±oNacimiento <= 1993 && this.a√±oNacimiento >= 1981) {
      alert("Perteneces a la generacion Y (millennials). Un rasgo caracter√≠stico de √©sta generaci√≥n es la 'Frustraci√≥n üòñ'");
    } else if (this.a√±oNacimiento <= 1980 && this.a√±oNacimiento >= 1969) {
      alert(
        "Perteneces a la Generacion X. Un rasgo caracter√≠stico de √©sta generaci√≥n es la 'Obsesi√≥n al √âxito üòé'"
      );
    } else if (this.a√±oNacimiento <= 1968 && this.a√±oNacimiento >= 1949) {
      alert(
        "Perteneces a la Generacion Baby Boom. Un rasgo caracter√≠stico de √©sta generaci√≥n es la 'Ambici√≥n ü§ë'"
      );
    } else if (this.a√±oNacimiento <= 1948 && this.a√±oNacimiento >= 1930) {
      alert(
        "Perteneces a la generacion Silent Generation(Los Ni√±os de la posguerra). Un rasgo caracter√≠stico de √©sta generaci√≥n es la 'Austeridad üòê'"
      );
    }
  }
  mostrarDatos() {
    salidaNombre.innerHTML = `<strong>NombreyApellido: ${this.nombre}</strong>`;
    salidaEdad.innerHTML = `<strong>Edad: ${this.edad}</strong>`;
    salidaDni.innerHTML = `<strong>DNI: ${this.dni}</strong>`;
    salidaSexo.innerHTML = `<strong>Sexo: ${this.sexo}`;
    salidaPeso.innerHTML = `<strong>Peso: ${this.peso} Kg</strong>`;
    salidaAltura.innerHTML = `<strong>Altura: ${this.altura} Cm</strong>`;
    salidaA√±oNacimiento.innerHTML = `<strong>A√±o de Nacimiento: ${this.a√±oNacimiento}</strong>`;
  }

  mayorEdad(){
    if (this.a√±oNacimiento > 2006) {
        alert('La persona ingresada No es Mayor de Edad');
    }else if (this.a√±oNacimiento <= 2006) {
         alert("La persona ingresada es Mayor de Edad");
    }
  }
}
const formulario = document.querySelector("form");
const salidaNombre = document.querySelector("#salidaNombre");
const salidaEdad = document.querySelector("#salidaEdad");
const salidaDni = document.querySelector("#salidaDni");
const salidaSexo = document.querySelector("#salidaSexo");
const salidaPeso = document.querySelector("#salidaPeso");
const salidaAltura = document.querySelector("#salidaAltura");
const salidaA√±oNacimiento = document.querySelector("#salidaA√±oNacimiento");
const btnGeneracion = document.querySelector("#btnGeneracion");
const btnEdad = document.querySelector('#btnEdad');
const botonesMostrar = document.querySelector('#articleBotones');
const btnGenerarPersona = document.querySelector("#btnGenerarPersona");



const obtenerDatosFormulario = ()=>{
const inputNombre = document.querySelector("#inputNombre").value;
const inputEdad = document.querySelector("#inputEdad").value;
const inputDni = document.querySelector("#inputDni").value;
const inputSexo = document.querySelector("#inputSexo").value;
const inputPeso = document.querySelector("#inputPeso").value;
const inputAltura = document.querySelector("#inputAltura").value;
const inputA√±oNacimiento = document.querySelector("#inputA√±oNacimiento").value;
return new Persona(
  inputNombre,
  inputEdad,
  inputDni,
  inputSexo,
  inputPeso,
  inputAltura,
  inputA√±oNacimiento
);
}


const mostrarNombre = (e) => {
  e.preventDefault();
  const personaRandom = obtenerDatosFormulario();
  personaRandom.mostrarDatos();
   botonesMostrar.classList.remove('d-none');
  botonesMostrar.classList.add('d-block');
 
};

const mostrarGeneracion = () => {
  const personaRandom = obtenerDatosFormulario();
  personaRandom.mostrarGeneracion();
  
};

const mayorEdad = ()=>{
    const personaRandom = obtenerDatosFormulario();
    personaRandom.mayorEdad();
}

const resetForm = ()=> {
   formulario.reset();
   salidaNombre.innerHTML = "";
   salidaEdad.innerHTML = "";
   salidaDni.innerHTML = "";
   salidaSexo.innerHTML = "";
   salidaPeso.innerHTML = "";
   salidaAltura.innerHTML = "";
   salidaA√±oNacimiento.innerHTML = "";
   botonesMostrar.classList.remove("d-block");
   botonesMostrar.classList.add("d-none");
}


formulario.addEventListener("submit", mostrarNombre);
btnGeneracion.addEventListener("click", mostrarGeneracion);
btnEdad.addEventListener('click', mayorEdad);


